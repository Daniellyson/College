<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/17/2019 11:02:07 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-J45VORHJ"
  DTS:CreatorName="LAPTOP-J45VORHJ\user"
  DTS:DTSID="{5F9140AE-4C7C-44CD-BC7D-26058FFEC129}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.1301.433"
  DTS:LocaleID="2060"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="14"
  DTS:VersionGUID="{70FBDE1D-EA1F-42D0-98AF-9B7C01D754B8}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Fichier des dates]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{BF4735CB-BED0-43F2-AB29-9CE14ACBE0EE}"
      DTS:ObjectName="Fichier des dates">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2060"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\Programming\GITHUB\BI\dates_etl_commun.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="DateEntree"
              DTS:DTSID="{C7FE19F5-A0E8-4C8D-8A7F-64576DB6CB83}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Fichier Sortie]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2124A48B-041C-4860-B995-EFE6DAE7F5D0}"
      DTS:ObjectName="Fichier Sortie">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="2060"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\Programming\GITHUB\BI\new.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="7"
              DTS:TextQualified="True"
              DTS:ObjectName="DateEntree"
              DTS:DTSID="{B287EEF8-8EED-41E9-84EE-A56F9F075E4F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DayFrenchName"
              DTS:DTSID="{AB175C3F-53EE-4F30-8821-B093A6103B74}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="DayEnglishName"
              DTS:DTSID="{D949A884-252C-4B4E-B14A-DE75371BB17E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthFrenchName"
              DTS:DTSID="{6942B245-1B5D-45F2-B2AB-F31346935019}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="MonthEnglishName"
              DTS:DTSID="{6DEE8468-DBA8-442D-8418-1429EBD6862D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="WeekNumber"
              DTS:DTSID="{A34BDD35-6A43-432F-A588-36CB5171F91E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DayOfWeekNumber"
              DTS:DTSID="{D23A99E9-3222-4043-BFA7-E56B81008325}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="DayOfYearNumber"
              DTS:DTSID="{6D61E7AD-1F18-4882-9074-9B2FC28AF40F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="Year"
              DTS:DTSID="{E14458C3-9CAB-4F10-B412-9E330DA0AB3C}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[vm-sql2.iesn.be.1920_32290_BIETLCOMMUN.1920_EtuGenerique]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{ACE7CAC1-3BCA-4E4C-8653-B909C70660B1}"
      DTS:ObjectName="vm-sql2.iesn.be.1920_32290_BIETLCOMMUN.1920_EtuGenerique">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=vm-sql2.iesn.be;User ID=1920_EtuGenerique;Initial Catalog=1920_32290_BIETLCOMMUN;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAA9G7+s4fElkiEe1th2M+uzwAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAS/znlmWRnZraXc2+vOpfD9+N30/VO752cxCTShtL6QwAAAAAOgAAAAAIAACAAAAAdZwHXsGQ4fz4pReAFQpp5KMgadqR5CEvU/wyeGc7SbCAAAAD6hAU7riUqayZYeIhw963SyTYliha36W+UxE7ATUT8qkAAAACunwnBoxUs8uaIGEHOmGaE56XkSf10+UM9LDT7ZNee/4pgC91ShwIu/kgLE1+/sTuTUO86CK06c7Fl2avZvY4R</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\import date"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tâche de flux de données"
      DTS:DTSID="{3417318D-138C-4FE1-BE92-91B20C11BCAF}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="import date"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\import date\Destination OLE DB"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
              description="Destination OLE DB"
              name="Destination OLE DB"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                  name="OpenRowset">[dbo].[DimDate]</property>
                <property
                  dataType="System.String"
                  description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Commande SQL à exécuter."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Spécifie le mode utilisé pour accéder à la base de données."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\import date\Destination OLE DB.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[vm-sql2.iesn.be.1920_32290_BIETLCOMMUN.1920_EtuGenerique]"
                  connectionManagerRefId="Package.ConnectionManagers[vm-sql2.iesn.be.1920_32290_BIETLCOMMUN.1920_EtuGenerique]"
                  description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
                  errorOrTruncationOperation="Insérer"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Entrée de destination OLE DB">
                  <inputColumns>
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DayFrenchName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DayFrenchName"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayFrenchName]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayFrenchName]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DayEnglishName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="DayEnglishName"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayEnglishName]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayEnglishName]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[MonthFrenchName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="MonthFrenchName"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MonthFrenchName]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[MonthFrenchName]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[MonthEnglishName]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="MonthEnglishName"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MonthEnglishName]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[MonthEnglishName]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[WeekNumber]"
                      cachedDataType="i4"
                      cachedName="WeekNumber"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WeekNumber]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[WeekNumber]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DayOfWeekNumber]"
                      cachedDataType="i4"
                      cachedName="DayOfWeekNumber"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayOfWeekNumber]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayOfWeekNumber]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DayOfYearNumber]"
                      cachedDataType="i4"
                      cachedName="DayOfYearNumber"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayOfYearNumber]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayOfYearNumber]" />
                    <inputColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].Columns[DateKey]"
                      cachedDataType="i4"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DateKey]"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DateKey]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DateKey]"
                      dataType="i4"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayFrenchName]"
                      dataType="wstr"
                      length="100"
                      name="DayFrenchName" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayEnglishName]"
                      dataType="wstr"
                      length="100"
                      name="DayEnglishName" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MonthFrenchName]"
                      dataType="wstr"
                      length="100"
                      name="MonthFrenchName" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[MonthEnglishName]"
                      dataType="wstr"
                      length="100"
                      name="MonthEnglishName" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[WeekNumber]"
                      dataType="i4"
                      name="WeekNumber" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayOfWeekNumber]"
                      dataType="i4"
                      name="DayOfWeekNumber" />
                    <externalMetadataColumn
                      refId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB].ExternalColumns[DayOfYearNumber]"
                      dataType="i4"
                      name="DayOfYearNumber" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import date\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Sortie d'erreur de destination OLE DB"
                  synchronousInputId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import date\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import date\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import date\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import date\Destination OLE DB.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import date\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Globalization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        String[] days = new string[] { "dimanche", "lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi"};

        CultureInfo frenchCulture = new CultureInfo("fr-BE");
        CultureInfo englishCulture = new CultureInfo("en-US");
        Row.DayFrenchName = Row.DateEntree.ToString("dddd", frenchCulture);
        Row.DayEnglishName = Row.DateEntree.ToString("dddd", englishCulture);
        Row.MonthFrenchName = Row.DateEntree.ToString("MMMM", frenchCulture);
        Row.MonthEnglishName = Row.DateEntree.ToString("MMMM", englishCulture);
        Row.WeekNumber = englishCulture.Calendar.GetWeekOfYear(Row.DateEntree, CalendarWeekRule.FirstDay, DayOfWeek.Monday);
        Row.DayOfWeekNumber = (int)Row.DateEntree.DayOfWeek + 1;
        Row.DayOfYearNumber = Row.DateEntree.DayOfYear;
        Row.DateKey = int.Parse(Row.DateEntree.ToString("yyyyMMdd"));
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e4632730c428461db63ef604309bd0cf.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EF38F73F-F907-4A16-B9A1-8E6BF675D6F0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_e4632730c428461db63ef604309bd0cf</RootNamespace>
    <AssemblyName>SC_e4632730c428461db63ef604309bd0cf</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC140</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4632730c428461db63ef604309bd0cf.Properties.Settings.get_Default():SC_e4632730c428461db63ef604309bd0cf.Properties.Sett" +
    "ings")]

namespace SC_e4632730c428461db63ef604309bd0cf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime DateEntree
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool DateEntree_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String DayFrenchName
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DayFrenchName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String DayEnglishName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DayEnglishName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthFrenchName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool MonthFrenchName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String MonthEnglishName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool MonthEnglishName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 WeekNumber
    {
        set
        {
            this[5] = value;
        }
    }
    public bool WeekNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DayOfWeekNumber
    {
        set
        {
            this[6] = value;
        }
    }
    public bool DayOfWeekNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DayOfYearNumber
    {
        set
        {
            this[7] = value;
        }
    }
    public bool DayOfYearNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DateKey
    {
        set
        {
            this[8] = value;
        }
    }
    public bool DateKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_e4632730c428461db63ef604309bd0cf</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_e4632730c428461db63ef604309bd0cf</msb:DisplayName>
    <msb:ProjectId>{30157A71-020B-4C12-835F-7145EB6FA981}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_e4632730c428461db63ef604309bd0cf.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_e4632730c428461db63ef604309bd0cf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_e4632730c428461db63ef604309bd0cf")]
[assembly: AssemblyCopyright("Copyright @  2019")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4632730c428461db63ef604309bd0cf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4632730c428461db63ef604309bd0cf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_e4632730c428461db63ef604309bd0cf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_e4632730c428461db63ef604309bd0cf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_e4632730c428461db63ef604309bd0cf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_e4632730c428461db63ef604309bd0cf.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAP21qV0AAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAVjgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAQ4AABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAXBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA4
OAAAAAAAAEgAAAACAAUAwCMAAIwTAAABAAAAAAAAAEw3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAUAHwEAAAEAABEdjRsAAAEl
FnIBAABwoiUXchMAAHCiJRhyHwAAcKIlGXIrAABwoiUacj0AAHCiJRtySQAAcKIlHHJbAABwoiZy
aQAAcHMSAAAKCnJ1AABwcxIAAAoLAwNvBgAABgwSAnKBAABwBigTAAAKbwgAAAYDA28GAAAGDBIC
coEAAHAHKBMAAApvCgAABgMDbwYAAAYMEgJyiwAAcAYoEwAACm8MAAAGAwNvBgAABgwSAnKLAABw
BygTAAAKbw4AAAYDB28UAAAKA28GAAAGFhdvFQAACm8QAAAGAwNvBgAABgwSAigWAAAKF1hvEgAA
BgMDbwYAAAYMEgIoFwAACm8UAAAGAwNvBgAABgwSAnKVAABwKBgAAAooGQAACm8WAAAGKh4CKBoA
AAYqKgIDBAUoGgAACipSAnsbAAAKAnscAAAKFpRvHQAACioiAhYoHgAACiomAhcDKB8AAAoqWgMs
CAIXKCAAAAoqcqcAAHBzIQAACnomAhgDKB8AAAoqWgMsCAIYKCAAAAoqcqcAAHBzIQAACnomAhkD
KB8AAAoqWgMsCAIZKCAAAAoqcqcAAHBzIQAACnomAhoDKB8AAAoqWgMsCAIaKCAAAAoqcqcAAHBz
IQAACno6AhsDjCAAAAEoHwAACipaAywIAhsoIAAACipypwAAcHMhAAAKejoCHAOMIAAAASgfAAAK
KloDLAgCHCggAAAKKnKnAABwcyEAAAp6OgIdA4wgAAABKB8AAAoqWgMsCAIdKCAAAAoqcqcAAHBz
IQAACno6Ah4DjCAAAAEoHwAACipaAywIAh4oIAAACipypwAAcHMhAAAKeh4CKCIAAAoqHgIoIwAA
Cip+AigkAAAKAgJzHgAABn0BAAAEAgJzHwAABn0CAAAEKpIEckQBAHAabyUAAAosFQIFAgMoJgAA
Cg4EcwUAAAZvHAAABipKKwcCA28dAAAGA28YAAAGLfEqBio6AignAAAKAgN9AwAABCo6AignAAAK
AgN9BAAABCoeAignAAAKKq5+BQAABC0eclQBAHDQBwAAAigoAAAKbykAAApzKgAACoAFAAAEfgUA
AAQqGn4GAAAEKh4CgAYAAAQqGn4HAAAEKh4CKCsAAAoqLnMlAAAGgAcAAAQqAABCU0pCAQABAAAA
AAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAACABwAAI34AAOwHAADkBwAAI1N0cmluZ3MAAAAA0A8A
AMgBAAAjVVMAmBEAABAAAAAjR1VJRAAAAKgRAADkAQAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAA
APoBMwAWAAABAAAAJQAAAAgAAAAHAAAAJgAAAB0AAAArAAAAEAAAAAEAAAADAAAAFQAAABYAAAAB
AAAABAAAAAEAAAAAAIADAQAAAAAABgBGAg4GBgDaAg4GBgCSAfsFDwCCBgAABgC/AeAEBgApAuAE
BgAKAuAEBgDBAuAEBgBmAuAEBgB/AuAEBgDWAeAEBgDxATkDCgCaAtkABgAdBcsEBgDQAJgECgDN
BdkADgC+BdkACgApBdkACgBIB9kABgALB5gEBgB1AfsFBgDeBS4GEgBFAWoDEgCmAWoDEgAnAbYE
BgBaAQ4GBgBVA5gEBgChBZgEBgBFBcsEBgBkAMsEBgBgA5gEBgABAJgEBgDyBJgEBgAMBZgEBgD6
AJgEBgBAAJgEBgDZB+AEAAAAAAcAAAAAAAEAAQABABAAqwQAABAAAQABAAEAEACxBQAAQQABAAUA
AQAQACoHAABNAAEAGgABABAA/wYAAFEAAwAeAAEAEADABgAAUQAEAB8AAAAQADUGkQZRAAUAIAAA
ARAA7waRBmUABwAkAAYA/warAAYAwAavAAEAOAezAAEAOAezABEAnwS3ABEAFwG7ABEAIQC/AFAg
AAAAAMYA+AIGAAEAWCAAAAAAxgADAwYAAQBgIAAAAADGAKoHwwABAIshAAAAAIYY7gUGAAIAkyEA
AAAAhhjuBU0AAgCeIQAAAACGCDEAyQAFALMhAAAAAIYIqANwAAUAvCEAAAAAhgiJABAABQDGIQAA
AACGCNkDzgAGAN0hAAAAAIYIsAAQAAcA5yEAAAAAhggOBM4ACAD+IQAAAACGCHUAEAAJAAgiAAAA
AIYIvgPOAAoAHyIAAAAAhgibABAACwApIgAAAACGCPIDzgAMAEAiAAAAAIYIagUBAA0ATyIAAAAA
hggoBM4ADgBmIgAAAACGCHkFAQAPAHUiAAAAAIYIPgTOABAAjCIAAAAAhgiNBQEAEQCbIgAAAACG
CFkEzgASALIiAAAAAIYIyQcBABMAwSIAAAAAhgh0BM4AFADYIgAAAACGAMEHcAAVAOAiAAAAAIYA
EgdwABUA6CIAAAAAhhjuBQYAFQAIIwAAAADGAJ0H0wAVAC0jAAAAAMYBlgfDABkAQCMAAAAAxgGq
B8MAGgBCIwAAAACGGO4F3QAbAFEjAAAAAIYY7gXdABwAYCMAAAAAgxjuBQYAHQBoIwAAAACTCNoF
4wAdAJQjAAAAAJMI/wDoAB0AmyMAAAAAkwgLAe0AHQCjIwAAAACWCB4H8wAeAKojAAAAAIYY7gUG
AB4AsiMAAAAAkRj0BfgAHgAAAAEAxQcAAAEA0wUAAAIAygYAAAMANwUAAAEADwMAAAEADwMAAAEA
DwMAAAEADwMAAAEADwMAAAEADwMAAAEADwMAAAEADwMAAAEADwMAAAEADwMAAAEADwMAAAEADwMA
AAEADwMAAAEADwMAAAEADwMAAAEADwMAAAEAEAAAAAIAwwAAAAMA0wUAAAQANwUAAAEA0wUAAAEA
xQcAAAEATgcAAAEATgcAAAEADwMJAO4FAQARAO4FBgAZAO4FCgApAO4FEAAxAO4FEAA5AO4FEABB
AO4FEABJAO4FEABRAO4FEABZAO4FEABhAO4FEABpAO4FBgCpAO4FBgDBAO4FFQDRAO4FBgCZAPgC
BgCZAAMDBgBxAO4FEAB5AFMDJABxAEEFKwDpAE4FMAB5AFwDOgB5AFwFPwB5AFMDQwABAT8BSACB
AO4FTQCBANMFVwCBAMoGWwCJAM0AXwCBAIAEZQCBAI8EagCBAIcEAQAJAe4FEACBAMEHcACBABIH
cACZAO4FBgDZAPgGdACZAN4GfAChAO4FBgAZAVIAggAZAdUHiwCxAO4FkQDJAO4FBgAuAAsAHAEu
ABMAJQEuABsARAEuACMATQEuACsAdgEuADMAdgEuADsAdgEuAEMATQEuAEsAfAEuAFMAdgEuAFsA
kwFDAGMA3QHhAHsA3QHjAGsA3QFpAnMARAGJAnMARAEbAAMAAQAHABMACAAVAAAANQD8AAAArAMB
AQAAjQAFAQAA3QMBAQAAtAAFAQAAEgQBAQAAeQAFAQAAwgMBAQAAnwAFAQAA9gMBAQAAggUJAQAA
RwQBAQAAfQUJAQAAQgQBAQAAkQUJAQAAXQQBAQAAzQcJAQAAeAQBAQAA3gUNAQAAHwESAQAAIgcX
AQIABgADAAIABwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEADgATAAEA
DwAVAAEAEAAXAAEAEQAZAAEAEgAbAAEAEwAdAAEAFAAfAAEAFQAhAAEAFgAjAAEAFwAlAAIAIQAn
AAIAIgApAAEAIwApAAIAJAArAASAAAABAAAAAAAAAAAAAAAAABUDAAAEAAAAAAAAAAAAAACZABgA
AAAAAA4AAAAAAAAAAAAAAKIAWAcAAAAADgAAAAAAAAAAAAAAogB1BwAAAAAEAAAAAAAAAAAAAACZ
AJgEAAAAAAAAAAABAAAAPwYAAAAAAAAASW50MzIAPE1vZHVsZT4ASW5wdXRJRABtc2NvcmxpYgBk
ZWZhdWx0SW5zdGFuY2UAZ2V0X0RhdGVFbnRyZWUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZy
b21IYW5kbGUAQ2FsZW5kYXJXZWVrUnVsZQBzZXRfTW9udGhGcmVuY2hOYW1lAHNldF9EYXlGcmVu
Y2hOYW1lAHNldF9Nb250aEVuZ2xpc2hOYW1lAHNldF9EYXlFbmdsaXNoTmFtZQBJbnB1dE5hbWUA
R2V0RGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
UGFyc2UARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dz
YWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0
cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25z
QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJp
YnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0
RXhlY3V0ZQB2YWx1ZQBTQ19lNDYzMjczMGM0Mjg0NjFkYjYzZWY2MDQzMDliZDBjZgBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF9EYXlPZldlZWsAU3lzdGVtLkNvbXBvbmVu
dE1vZGVsAFNDX2U0NjMyNzMwYzQyODQ2MWRiNjNlZjYwNDMwOWJkMGNmLmRsbABnZXRfRGF0ZUVu
dHJlZV9Jc051bGwAc2V0X01vbnRoRnJlbmNoTmFtZV9Jc051bGwAc2V0X0RheUZyZW5jaE5hbWVf
SXNOdWxsAHNldF9Nb250aEVuZ2xpc2hOYW1lX0lzTnVsbABzZXRfRGF5RW5nbGlzaE5hbWVfSXNO
dWxsAHNldF9XZWVrTnVtYmVyX0lzTnVsbABzZXRfRGF5T2ZXZWVrTnVtYmVyX0lzTnVsbABzZXRf
RGF5T2ZZZWFyTnVtYmVyX0lzTnVsbABzZXRfRGF0ZUtleV9Jc051bGwAU2V0TnVsbABzZXRfSXRl
bQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0
aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAA
Z2V0X0NhbGVuZGFyAEdldFdlZWtPZlllYXIAZ2V0X0RheU9mWWVhcgBzZXRfV2Vla051bWJlcgBz
ZXRfRGF5T2ZXZWVrTnVtYmVyAHNldF9EYXlPZlllYXJOdW1iZXIASUZvcm1hdFByb3ZpZGVyAElu
cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdl
cgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVy
U2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19lNDYzMjczMGM0Mjg0NjFkYjYzZWY2MDQzMDli
ZDBjZi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfZTQ2
MzI3MzBjNDI4NDYxZGI2M2VmNjA0MzA5YmQwY2YuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVy
Q29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9u
cwBPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVudABQYXJlbnRDb21w
b25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9z
b2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJv
Y2Vzc0lucHV0Um93AE5leHRSb3cAc2V0X0RhdGVLZXkAZ2V0X0Fzc2VtYmx5AAAAABFkAGkAbQBh
AG4AYwBoAGUAAAtsAHUAbgBkAGkAAAttAGEAcgBkAGkAABFtAGUAcgBjAHIAZQBkAGkAAAtqAGUA
dQBkAGkAABF2AGUAbgBkAHIAZQBkAGkAAA1zAGEAbQBlAGQAaQAAC2YAcgAtAEIARQABC2UAbgAt
AFUAUwABCWQAZABkAGQAAAlNAE0ATQBNAAAReQB5AHkAeQBNAE0AZABkAACAm0kAcwBOAHUAbABs
ACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYA
YQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABj
AG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAgADAAAHFTAEMAXwBlADQA
NgAzADIANwAzADAAYwA0ADIAOAA0ADYAMQBkAGIANgAzAGUAZgA2ADAANAAzADAAOQBiAGQAMABj
AGYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAIF2Z8+40JU6V
FhJzKi7q+wAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERXQgHAxI5EjkRPQYgAg4OEnEEIAASdQkg
AwgRPRF5EX0EIAARfQMgAAgEIAEODgQAAQgOCSADARJFHQgSSQMGEkUDBh0IBSABET0IBCABAggF
IAIBCBwDIAACByACAg4RgIkFIAEdCAgIAAESgI0RgJEFIAASgJUHIAIBDhKAlQi3elxWGTTgiQiJ
hF3NgIDMkQMGEhQDBhIYAwYSTQMGElkDBhI5AwYSIAUgAQESDAQgABE9BCABAQIJIAQBCA4SRRJJ
BSABARJNBAAAElkEAAASOQUAAQESOQQAABIgAwAAAQQoABE9AygAAgMoAA4DKAAIBAgAElkECAAS
OQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgB
ACNTQ19lNDYzMjczMGM0Mjg0NjFkYjYzZWY2MDQzMDliZDBjZgAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDE5AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjUBAFQOFEZyYW1ld29ya0Rp
c3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNQQBAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3Rl
bS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1
bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVz
b3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAALDgAAAAAAAAA
AAAARjgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAADg4AAAAAAAAAAAAAAAAX0NvckRsbE1haW4A
bXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAADsAwAAAAAAAAAAAADsAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAETAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwBlADQANgAzADIANwAzADAAYwA0ADIAOAA0ADYAMQBkAGIANgAzAGUAZgA2ADAANAAzADAA
OQBiAGQAMABjAGYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGUANAA2ADMAMgA3ADMA
MABjADQAMgA4ADQANgAxAGQAYgA2ADMAZQBmADYAMAA0ADMAMAA5AGIAZAAwAGMAZgAuAGQAbABs
AAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAAIAAyADAAMQA5AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AZQA0ADYA
MwAyADcAMwAwAGMANAAyADgANAA2ADEAZABiADYAMwBlAGYANgAwADQAMwAwADkAYgBkADAAYwBm
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGUANAA2ADMA
MgA3ADMAMABjADQAMgA4ADQANgAxAGQAYgA2ADMAZQBmADYAMAA0ADMAMAA5AGIAZAAwAGMAZgAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAWDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_e4632730c428461db63ef604309bd0cf</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">2E</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\import date\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\import date\Script Component.Inputs[Input 0].Columns[DateEntree]"
                      cachedDataType="date"
                      cachedName="DateEntree"
                      lineageId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat].Columns[DateEntree]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import date\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\import date\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[DayFrenchName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayFrenchName]"
                      name="DayFrenchName" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[DayEnglishName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayEnglishName]"
                      name="DayEnglishName" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[MonthFrenchName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[MonthFrenchName]"
                      name="MonthFrenchName" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[MonthEnglishName]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[MonthEnglishName]"
                      name="MonthEnglishName" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[WeekNumber]"
                      dataType="i4"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[WeekNumber]"
                      name="WeekNumber" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[DayOfWeekNumber]"
                      dataType="i4"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayOfWeekNumber]"
                      name="DayOfWeekNumber" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[DayOfYearNumber]"
                      dataType="i4"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DayOfYearNumber]"
                      name="DayOfYearNumber" />
                    <outputColumn
                      refId="Package\import date\Script Component.Outputs[Output 0].Columns[DateKey]"
                      dataType="i4"
                      lineageId="Package\import date\Script Component.Outputs[Output 0].Columns[DateKey]"
                      name="DateKey" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import date\Source du fichier Dates"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Source du fichier plat;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;1"
              description="Source du fichier plat"
              localeId="2060"
              name="Source du fichier Dates"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Spécifie si les colonnes dont la longueur est zéro sont traitées comme des valeurs NULL."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Spécifie le nom d'une colonne de sortie contenant le nom du fichier. Si aucun nom n'est spécifié, aucune colonne de sortie contenant le nom du fichier ne sera générée."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\import date\Source du fichier Dates.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Fichier des dates]"
                  connectionManagerRefId="Package.ConnectionManagers[Fichier des dates]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat]"
                  name="Sortie de source de fichier plat">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat].Columns[DateEntree]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat].ExternalColumns[DateEntree]"
                      lineageId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat].Columns[DateEntree]"
                      name="DateEntree"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indique si la colonne utilise les routines d'analyse les plus rapides, avec des paramètres régionaux neutres."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indique si les données sont au format binaire."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat].ExternalColumns[DateEntree]"
                      dataType="date"
                      name="DateEntree" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat]"
                  isErrorOut="true"
                  name="Sortie d'erreur de source de fichier plat">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat].Columns[Colonne de sortie d'erreur de source de fichier plat]"
                      codePage="1252"
                      dataType="text"
                      description="Colonne de sortie d'erreur de source de fichier plat"
                      lineageId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat].Columns[Colonne de sortie d'erreur de source de fichier plat]"
                      name="Colonne de sortie d'erreur de source de fichier plat" />
                    <outputColumn
                      refId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import date\Source du fichier Dates.Outputs[Sortie d'erreur de source de fichier plat].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\import date.Paths[Output 0]"
              endId="Package\import date\Destination OLE DB.Inputs[Entrée de destination OLE DB]"
              name="Output 0"
              startId="Package\import date\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\import date.Paths[Sortie de source de fichier plat]"
              endId="Package\import date\Script Component.Inputs[Input 0]"
              name="Sortie de source de fichier plat"
              startId="Package\import date\Source du fichier Dates.Outputs[Sortie de source de fichier plat]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\import date 2"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Tâche de flux de données"
      DTS:DTSID="{CFDF7DDE-20AF-47F0-AFDB-60CB9B50B65A}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="import date 2"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\import date 2\Destination OLE DB 1"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="Destination OLE DB;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; Tous droits réservés; http://www.microsoft.com/sql/support;4"
              description="Destination OLE DB"
              name="Destination OLE DB 1"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Nombre de secondes avant l'expiration d'une commande.  Une valeur égale à 0 indique un délai d'expiration infini."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Spécifie le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                  name="OpenRowset"></property>
                <property
                  dataType="System.String"
                  description="Spécifie la variable contenant le nom de l'objet de base de données utilisé pour ouvrir un ensemble de lignes."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="Commande SQL à exécuter."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Spécifie la page de codes de la colonne à utiliser lorsque les informations de page de codes ne sont pas disponibles à partir de la source de données."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Force l'utilisation de la valeur de propriété DefaultCodePage lors de la description des données caractères."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Spécifie le mode utilisé pour accéder à la base de données."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indique si les valeurs fournies pour les colonnes d'identité seront copiées à la destination. Si la valeur est définie à False, les valeurs des colonnes d'identité seront générées automatiquement à la destination. Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indique si les colonnes contenant la valeur NULL auront cette valeur NULL copiée à la destination. Si la valeur est définie à False, les colonnes contenant la valeur NULL auront leurs valeurs par défaut insérées à la destination. Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Spécifie les options à utiliser avec le chargement rapide.  Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Spécifie quand les validations sont émises pendant l'insertion des données.  Une valeur égale à 0 spécifie qu'une validation sera émise à la fin de l'insertion des données.  Ne s'applique que si le chargement rapide est activé."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\import date 2\Destination OLE DB 1.Connections[OleDbConnection]"
                  description="Connexion OLE DB en cours d'exécution utilisée pour accéder à la base de données."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\import date 2\Destination OLE DB 1.Inputs[Entrée de destination OLE DB]"
                  errorOrTruncationOperation="Insérer"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Entrée de destination OLE DB">
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import date 2\Destination OLE DB 1.Outputs[Sortie d'erreur de destination OLE DB]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Sortie d'erreur de destination OLE DB"
                  synchronousInputId="Package\import date 2\Destination OLE DB 1.Inputs[Entrée de destination OLE DB]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import date 2\Destination OLE DB 1.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import date 2\Destination OLE DB 1.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import date 2\Destination OLE DB 1.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import date 2\Destination OLE DB 1.Outputs[Sortie d'erreur de destination OLE DB].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import date 2\Script Component 1"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;11"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component 1"
              version="11">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_51f25315fa7e4a26a3b39c65dc9f467d</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\import date 2\Script Component 1.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\import date 2\Script Component 1.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\import date 2\Script Component 1.Inputs[Input 0]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\import date 2\Source ODBC"
              componentClassID="Attunity.SSISODBCSrc"
              description="Source ODBC"
              name="Source ODBC"
              usesDispositions="true"
              version="7">
              <properties>
                <property
                  dataType="System.String"
                  description="Nom de la table à extraire."
                  expressionType="Notify"
                  name="TableName"></property>
                <property
                  dataType="System.String"
                  description="Commande SQL à exécuter."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Spécifiez le nombre de lignes extraites par lot."
                  expressionType="Notify"
                  name="BatchSize">1000</property>
                <property
                  dataType="System.Int32"
                  description="Détermine l'allocation de taille de segment pour les colonnes LOB"
                  expressionType="Notify"
                  name="LobChunkSize">32768</property>
                <property
                  dataType="System.Boolean"
                  description="Détermine la façon dont le composant expose les colonnes CHAR. Si la valeur est False, les colonnes CHAR sont exposées comme des chaînes (multi)octets (DT_STR), si la valeur est True, les colonnes CHAR sont exposées comme des chaînes étendues (DT_WSTR)"
                  expressionType="Notify"
                  name="ExposeCharColumnsAsUnicode">false</property>
                <property
                  dataType="System.Int32"
                  description="Durée d'attente, en secondes, de l'exécution d'une instruction SQL avant le retour à l'application."
                  expressionType="Notify"
                  name="StatementTimeout">0</property>
                <property
                  dataType="System.Int32"
                  description="Page de codes à utiliser quand les informations de page de codes ne sont pas disponibles à partir de la source de données."
                  expressionType="Notify"
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Int32"
                  description="Méthode utilisée pour extraire les données."
                  expressionType="Notify"
                  name="FetchMethod">1</property>
                <property
                  dataType="System.Int32"
                  description="Type de données ODBC C pour la liaison de données numériques."
                  expressionType="Notify"
                  name="BindNumericAs">0</property>
                <property
                  dataType="System.Int32"
                  description="Détermine la façon dont le composant lie les colonnes des types de chaîne (multi)octet (par ex., SQL_CHAR, SQL_VARCHAR, SQL_LONGVARCHAR). Les options sont : Unicode (SQL_C_WCHAR) et ANSI (SQL_C_CHAR)."
                  expressionType="Notify"
                  name="BindCharColumnsAs">0</property>
                <property
                  dataType="System.Int32"
                  description="Mode utilisé pour accéder à la base de données."
                  expressionType="Notify"
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
              </properties>
              <connections>
                <connection
                  refId="Package\import date 2\Source ODBC.Connections[ODBCConnection]"
                  description="Connexion ODBC en cours d'exécution utilisée pour accéder à la base de données."
                  name="ODBCConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\import date 2\Source ODBC.Outputs[Sortie de la source ODBC]"
                  errorRowDisposition="FailComponent"
                  name="Sortie de la source ODBC"
                  truncationRowDisposition="FailComponent">
                  <externalMetadataColumns
                    isUsed="True" />
                </output>
                <output
                  refId="Package\import date 2\Source ODBC.Outputs[Sortie d'erreur de la source ODBC]"
                  isErrorOut="true"
                  name="Sortie d'erreur de la source ODBC">
                  <outputColumns>
                    <outputColumn
                      refId="Package\import date 2\Source ODBC.Outputs[Sortie d'erreur de la source ODBC].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\import date 2\Source ODBC.Outputs[Sortie d'erreur de la source ODBC].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\import date 2\Source ODBC.Outputs[Sortie d'erreur de la source ODBC].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\import date 2\Source ODBC.Outputs[Sortie d'erreur de la source ODBC].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\import date 2.Paths[Output 0]"
              endId="Package\import date 2\Destination OLE DB 1.Inputs[Entrée de destination OLE DB]"
              name="Output 0"
              startId="Package\import date 2\Script Component 1.Outputs[Output 0]" />
            <path
              refId="Package\import date 2.Paths[Sortie de la source ODBC]"
              endId="Package\import date 2\Script Component 1.Inputs[Input 0]"
              name="Sortie de la source ODBC"
              startId="Package\import date 2\Source ODBC.Outputs[Sortie de la source ODBC]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="130.4,41.6"
          Id="Package\import date"
          TopLeft="51.3333312935298,45.7600003636678" />
        <NodeLayout
          Size="139.2,41.6"
          Id="Package\import date 2"
          TopLeft="213.999991496404,43.6800003471375" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\import date">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="186.4,41.6"
          Id="Package\import date\Source du fichier Dates"
          TopLeft="35.3333319293134,56.853333785163" />
        <NodeLayout
          Size="171.2,41.6"
          Id="Package\import date\Destination OLE DB"
          TopLeft="495.333313650556,61.0133338182237" />
        <NodeLayout
          Size="161.6,41.6"
          Id="Package\import date\Script Component"
          TopLeft="281.999988794327,61.0133338182237" />
        <EdgeLayout
          Id="Package\import date.Paths[Output 0]"
          TopLeft="443.599988794327,81.8133338182237">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51.7333248562289,0"
              Start="0,0"
              End="44.2333248562289,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.2333248562289,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\import date.Paths[Sortie de source de fichier plat]"
          TopLeft="221.733331929313,79.7333338016934">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60.2666568650135,0"
              Start="0,0"
              End="52.7666568650135,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.7666568650135,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\import date\Destination OLE DB">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\import date 2">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170.4,41.6"
          Id="Package\import date 2\Script Component 1"
          TopLeft="273.925917425274,62.6962963177243" />
        <NodeLayout
          Size="144,41.6"
          Id="Package\import date 2\Source ODBC"
          TopLeft="60,60" />
        <NodeLayout
          Size="180,41.6"
          Id="Package\import date 2\Destination OLE DB 1"
          TopLeft="497.629612239791,63.6088886060359" />
        <EdgeLayout
          Id="Package\import date 2.Paths[Output 0]"
          TopLeft="444.325917425274,83.9525924618801">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="53.3036948145171,0"
              Start="0,0"
              End="45.8036948145171,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="45.8036948145171,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\import date 2.Paths[Sortie de la source ODBC]"
          TopLeft="204,82.1481481588621">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.9259174252741,0"
              Start="0,0"
              End="62.4259174252741,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="62.4259174252741,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>